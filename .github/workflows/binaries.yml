name: Binaries
on:
  release:
    types: [ published ]

permissions:
  contents: write

jobs:
  build-and-upload:
    name: Build and Upload Release Assets
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl

          - build: macos-intel
            os: macos-13
            target: x86_64-apple-darwin

          - build: macos-arm
            os: macos-latest
            target: aarch64-apple-darwin

          - build: windows
            os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Release Version from Tag
        shell: bash
        run: echo "VERSION=${GITHUB_REF_NAME}" >> $GITHUB_ENV

      - name: Cache Cargo Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Get Binary Name
        shell: bash
        run: |
          BIN_NAME=$(cargo metadata --no-deps --format-version=1 | jq -r '.packages[0].targets[0].name')
          echo "BINARY_NAME=$BIN_NAME" >> $GITHUB_ENV

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Package Binary
        shell: bash
        run: |
          DIRNAME="${{ env.BINARY_NAME }}-${{ env.VERSION }}-${{ matrix.target }}"
          mkdir "$DIRNAME"

          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            mv "target/${{ matrix.target }}/release/${{ env.BINARY_NAME }}.exe" "$DIRNAME/"
            7z a "$DIRNAME.zip" "$DIRNAME"
            echo "ASSET=$DIRNAME.zip" >> $GITHUB_ENV
          else
            mv "target/${{ matrix.target }}/release/${{ env.BINARY_NAME }}" "$DIRNAME/"
            tar -czf "$DIRNAME.tar.gz" "$DIRNAME"
            echo "ASSET=$DIRNAME.tar.gz" >> $GITHUB_ENV
          fi

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.ASSET }}
          name: ${{ matrix.build }}
          fail_on_unmatched_files: false
